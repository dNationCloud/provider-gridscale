//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoAssignedServersInitParameters) DeepCopyInto(out *AutoAssignedServersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoAssignedServersInitParameters.
func (in *AutoAssignedServersInitParameters) DeepCopy() *AutoAssignedServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoAssignedServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoAssignedServersObservation) DeepCopyInto(out *AutoAssignedServersObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.ServerUUID != nil {
		in, out := &in.ServerUUID, &out.ServerUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoAssignedServersObservation.
func (in *AutoAssignedServersObservation) DeepCopy() *AutoAssignedServersObservation {
	if in == nil {
		return nil
	}
	out := new(AutoAssignedServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoAssignedServersParameters) DeepCopyInto(out *AutoAssignedServersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoAssignedServersParameters.
func (in *AutoAssignedServersParameters) DeepCopy() *AutoAssignedServersParameters {
	if in == nil {
		return nil
	}
	out := new(AutoAssignedServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4) DeepCopyInto(out *IPv4) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4.
func (in *IPv4) DeepCopy() *IPv4 {
	if in == nil {
		return nil
	}
	out := new(IPv4)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv4) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4InitParameters) DeepCopyInto(out *IPv4InitParameters) {
	*out = *in
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4InitParameters.
func (in *IPv4InitParameters) DeepCopy() *IPv4InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4List) DeepCopyInto(out *IPv4List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPv4, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4List.
func (in *IPv4List) DeepCopy() *IPv4List {
	if in == nil {
		return nil
	}
	out := new(IPv4List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv4List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Observation) DeepCopyInto(out *IPv4Observation) {
	*out = *in
	if in.ChangeTime != nil {
		in, out := &in.ChangeTime, &out.ChangeTime
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CurrentPrice != nil {
		in, out := &in.CurrentPrice, &out.CurrentPrice
		*out = new(float64)
		**out = **in
	}
	if in.DeleteBlock != nil {
		in, out := &in.DeleteBlock, &out.DeleteBlock
		*out = new(bool)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocationCountry != nil {
		in, out := &in.LocationCountry, &out.LocationCountry
		*out = new(string)
		**out = **in
	}
	if in.LocationIata != nil {
		in, out := &in.LocationIata, &out.LocationIata
		*out = new(string)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.LocationUUID != nil {
		in, out := &in.LocationUUID, &out.LocationUUID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UsageInMinutes != nil {
		in, out := &in.UsageInMinutes, &out.UsageInMinutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Observation.
func (in *IPv4Observation) DeepCopy() *IPv4Observation {
	if in == nil {
		return nil
	}
	out := new(IPv4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Parameters) DeepCopyInto(out *IPv4Parameters) {
	*out = *in
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Parameters.
func (in *IPv4Parameters) DeepCopy() *IPv4Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Spec) DeepCopyInto(out *IPv4Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Spec.
func (in *IPv4Spec) DeepCopy() *IPv4Spec {
	if in == nil {
		return nil
	}
	out := new(IPv4Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Status) DeepCopyInto(out *IPv4Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Status.
func (in *IPv4Status) DeepCopy() *IPv4Status {
	if in == nil {
		return nil
	}
	out := new(IPv4Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6) DeepCopyInto(out *IPv6) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6.
func (in *IPv6) DeepCopy() *IPv6 {
	if in == nil {
		return nil
	}
	out := new(IPv6)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv6) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6InitParameters) DeepCopyInto(out *IPv6InitParameters) {
	*out = *in
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6InitParameters.
func (in *IPv6InitParameters) DeepCopy() *IPv6InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6List) DeepCopyInto(out *IPv6List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPv6, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6List.
func (in *IPv6List) DeepCopy() *IPv6List {
	if in == nil {
		return nil
	}
	out := new(IPv6List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv6List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Observation) DeepCopyInto(out *IPv6Observation) {
	*out = *in
	if in.ChangeTime != nil {
		in, out := &in.ChangeTime, &out.ChangeTime
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CurrentPrice != nil {
		in, out := &in.CurrentPrice, &out.CurrentPrice
		*out = new(float64)
		**out = **in
	}
	if in.DeleteBlock != nil {
		in, out := &in.DeleteBlock, &out.DeleteBlock
		*out = new(bool)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocationCountry != nil {
		in, out := &in.LocationCountry, &out.LocationCountry
		*out = new(string)
		**out = **in
	}
	if in.LocationIata != nil {
		in, out := &in.LocationIata, &out.LocationIata
		*out = new(string)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.LocationUUID != nil {
		in, out := &in.LocationUUID, &out.LocationUUID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UsageInMinutes != nil {
		in, out := &in.UsageInMinutes, &out.UsageInMinutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Observation.
func (in *IPv6Observation) DeepCopy() *IPv6Observation {
	if in == nil {
		return nil
	}
	out := new(IPv6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Parameters) DeepCopyInto(out *IPv6Parameters) {
	*out = *in
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReverseDNS != nil {
		in, out := &in.ReverseDNS, &out.ReverseDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Parameters.
func (in *IPv6Parameters) DeepCopy() *IPv6Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Spec) DeepCopyInto(out *IPv6Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Spec.
func (in *IPv6Spec) DeepCopy() *IPv6Spec {
	if in == nil {
		return nil
	}
	out := new(IPv6Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Status) DeepCopyInto(out *IPv6Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Status.
func (in *IPv6Status) DeepCopy() *IPv6Status {
	if in == nil {
		return nil
	}
	out := new(IPv6Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInitParameters) DeepCopyInto(out *NetworkInitParameters) {
	*out = *in
	if in.DHCPActive != nil {
		in, out := &in.DHCPActive, &out.DHCPActive
		*out = new(bool)
		**out = **in
	}
	if in.DHCPDNS != nil {
		in, out := &in.DHCPDNS, &out.DHCPDNS
		*out = new(string)
		**out = **in
	}
	if in.DHCPGateway != nil {
		in, out := &in.DHCPGateway, &out.DHCPGateway
		*out = new(string)
		**out = **in
	}
	if in.DHCPRange != nil {
		in, out := &in.DHCPRange, &out.DHCPRange
		*out = new(string)
		**out = **in
	}
	if in.DHCPReservedSubnet != nil {
		in, out := &in.DHCPReservedSubnet, &out.DHCPReservedSubnet
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.L2Security != nil {
		in, out := &in.L2Security, &out.L2Security
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInitParameters.
func (in *NetworkInitParameters) DeepCopy() *NetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkList) DeepCopyInto(out *NetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkList.
func (in *NetworkList) DeepCopy() *NetworkList {
	if in == nil {
		return nil
	}
	out := new(NetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.AutoAssignedServers != nil {
		in, out := &in.AutoAssignedServers, &out.AutoAssignedServers
		*out = make([]AutoAssignedServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChangeTime != nil {
		in, out := &in.ChangeTime, &out.ChangeTime
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DHCPActive != nil {
		in, out := &in.DHCPActive, &out.DHCPActive
		*out = new(bool)
		**out = **in
	}
	if in.DHCPDNS != nil {
		in, out := &in.DHCPDNS, &out.DHCPDNS
		*out = new(string)
		**out = **in
	}
	if in.DHCPGateway != nil {
		in, out := &in.DHCPGateway, &out.DHCPGateway
		*out = new(string)
		**out = **in
	}
	if in.DHCPRange != nil {
		in, out := &in.DHCPRange, &out.DHCPRange
		*out = new(string)
		**out = **in
	}
	if in.DHCPReservedSubnet != nil {
		in, out := &in.DHCPReservedSubnet, &out.DHCPReservedSubnet
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeleteBlock != nil {
		in, out := &in.DeleteBlock, &out.DeleteBlock
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.L2Security != nil {
		in, out := &in.L2Security, &out.L2Security
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocationCountry != nil {
		in, out := &in.LocationCountry, &out.LocationCountry
		*out = new(string)
		**out = **in
	}
	if in.LocationIata != nil {
		in, out := &in.LocationIata, &out.LocationIata
		*out = new(string)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.LocationUUID != nil {
		in, out := &in.LocationUUID, &out.LocationUUID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.PinnedServers != nil {
		in, out := &in.PinnedServers, &out.PinnedServers
		*out = make([]PinnedServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.DHCPActive != nil {
		in, out := &in.DHCPActive, &out.DHCPActive
		*out = new(bool)
		**out = **in
	}
	if in.DHCPDNS != nil {
		in, out := &in.DHCPDNS, &out.DHCPDNS
		*out = new(string)
		**out = **in
	}
	if in.DHCPGateway != nil {
		in, out := &in.DHCPGateway, &out.DHCPGateway
		*out = new(string)
		**out = **in
	}
	if in.DHCPRange != nil {
		in, out := &in.DHCPRange, &out.DHCPRange
		*out = new(string)
		**out = **in
	}
	if in.DHCPReservedSubnet != nil {
		in, out := &in.DHCPReservedSubnet, &out.DHCPReservedSubnet
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.L2Security != nil {
		in, out := &in.L2Security, &out.L2Security
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSpec) DeepCopyInto(out *NetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSpec.
func (in *NetworkSpec) DeepCopy() *NetworkSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkStatus) DeepCopyInto(out *NetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkStatus.
func (in *NetworkStatus) DeepCopy() *NetworkStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PinnedServersInitParameters) DeepCopyInto(out *PinnedServersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PinnedServersInitParameters.
func (in *PinnedServersInitParameters) DeepCopy() *PinnedServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(PinnedServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PinnedServersObservation) DeepCopyInto(out *PinnedServersObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.ServerUUID != nil {
		in, out := &in.ServerUUID, &out.ServerUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PinnedServersObservation.
func (in *PinnedServersObservation) DeepCopy() *PinnedServersObservation {
	if in == nil {
		return nil
	}
	out := new(PinnedServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PinnedServersParameters) DeepCopyInto(out *PinnedServersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PinnedServersParameters.
func (in *PinnedServersParameters) DeepCopy() *PinnedServersParameters {
	if in == nil {
		return nil
	}
	out := new(PinnedServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sshkey) DeepCopyInto(out *Sshkey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sshkey.
func (in *Sshkey) DeepCopy() *Sshkey {
	if in == nil {
		return nil
	}
	out := new(Sshkey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Sshkey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeyInitParameters) DeepCopyInto(out *SshkeyInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sshkey != nil {
		in, out := &in.Sshkey, &out.Sshkey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeyInitParameters.
func (in *SshkeyInitParameters) DeepCopy() *SshkeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SshkeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeyList) DeepCopyInto(out *SshkeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Sshkey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeyList.
func (in *SshkeyList) DeepCopy() *SshkeyList {
	if in == nil {
		return nil
	}
	out := new(SshkeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SshkeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeyObservation) DeepCopyInto(out *SshkeyObservation) {
	*out = *in
	if in.ChangeTime != nil {
		in, out := &in.ChangeTime, &out.ChangeTime
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sshkey != nil {
		in, out := &in.Sshkey, &out.Sshkey
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeyObservation.
func (in *SshkeyObservation) DeepCopy() *SshkeyObservation {
	if in == nil {
		return nil
	}
	out := new(SshkeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeyParameters) DeepCopyInto(out *SshkeyParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Sshkey != nil {
		in, out := &in.Sshkey, &out.Sshkey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeyParameters.
func (in *SshkeyParameters) DeepCopy() *SshkeyParameters {
	if in == nil {
		return nil
	}
	out := new(SshkeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeySpec) DeepCopyInto(out *SshkeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeySpec.
func (in *SshkeySpec) DeepCopy() *SshkeySpec {
	if in == nil {
		return nil
	}
	out := new(SshkeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshkeyStatus) DeepCopyInto(out *SshkeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshkeyStatus.
func (in *SshkeyStatus) DeepCopy() *SshkeyStatus {
	if in == nil {
		return nil
	}
	out := new(SshkeyStatus)
	in.DeepCopyInto(out)
	return out
}
